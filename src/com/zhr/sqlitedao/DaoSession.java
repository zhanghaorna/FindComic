package com.zhr.sqlitedao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.zhr.sqlitedao.News;
import com.zhr.sqlitedao.ComicRecord;
import com.zhr.sqlitedao.DownloadComic;
import com.zhr.sqlitedao.DownloadComicDetail;

import com.zhr.sqlitedao.NewsDao;
import com.zhr.sqlitedao.ComicRecordDao;
import com.zhr.sqlitedao.DownloadComicDao;
import com.zhr.sqlitedao.DownloadComicDetailDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig newsDaoConfig;
    private final DaoConfig comicRecordDaoConfig;
    private final DaoConfig downloadComicDaoConfig;
    private final DaoConfig downloadComicDetailDaoConfig;

    private final NewsDao newsDao;
    private final ComicRecordDao comicRecordDao;
    private final DownloadComicDao downloadComicDao;
    private final DownloadComicDetailDao downloadComicDetailDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        newsDaoConfig = daoConfigMap.get(NewsDao.class).clone();
        newsDaoConfig.initIdentityScope(type);

        comicRecordDaoConfig = daoConfigMap.get(ComicRecordDao.class).clone();
        comicRecordDaoConfig.initIdentityScope(type);

        downloadComicDaoConfig = daoConfigMap.get(DownloadComicDao.class).clone();
        downloadComicDaoConfig.initIdentityScope(type);

        downloadComicDetailDaoConfig = daoConfigMap.get(DownloadComicDetailDao.class).clone();
        downloadComicDetailDaoConfig.initIdentityScope(type);

        newsDao = new NewsDao(newsDaoConfig, this);
        comicRecordDao = new ComicRecordDao(comicRecordDaoConfig, this);
        downloadComicDao = new DownloadComicDao(downloadComicDaoConfig, this);
        downloadComicDetailDao = new DownloadComicDetailDao(downloadComicDetailDaoConfig, this);

        registerDao(News.class, newsDao);
        registerDao(ComicRecord.class, comicRecordDao);
        registerDao(DownloadComic.class, downloadComicDao);
        registerDao(DownloadComicDetail.class, downloadComicDetailDao);
    }
    
    public void clear() {
        newsDaoConfig.getIdentityScope().clear();
        comicRecordDaoConfig.getIdentityScope().clear();
        downloadComicDaoConfig.getIdentityScope().clear();
        downloadComicDetailDaoConfig.getIdentityScope().clear();
    }

    public NewsDao getNewsDao() {
        return newsDao;
    }

    public ComicRecordDao getComicRecordDao() {
        return comicRecordDao;
    }

    public DownloadComicDao getDownloadComicDao() {
        return downloadComicDao;
    }

    public DownloadComicDetailDao getDownloadComicDetailDao() {
        return downloadComicDetailDao;
    }

}
